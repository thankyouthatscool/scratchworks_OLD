name: Build server container

on:
  push:
    branches:
      - "development"

jobs:
  docker:
    name: Build images
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:apps/scratchworks-backend"
          push: true
          tags: ozahnitko/scratchworks-backend-server:dev-latest

  update_server:
    name: Update server
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Update
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          USERNAME: ${{ secrets.USERNAME }}
        run: |
          echo "$SSH_KEY" > key && chmod 600 key
          ls -la
          ssh -o StrictHostKeyChecking=no -i key ${USERNAME}@${SERVER_HOST} "
            docker pull ozahnitko/scratchworks-backend-server:dev-latest &&
            docker stop scratchworks-backend-server &&
            docker rm scratchworks-backend-server &&
            docker run -d --name scratchworks-backend-server --network container:postgres ozahnitko/scratchworks-backend-server:dev-latest &&
            docker image prune --force
          "

  update_app:
    name: EAS Update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn

      - name: Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Find yarn cache
        id: yarn-cache-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Publish update
        run: |
          cd apps/inertiion
          eas update --auto
